
# Script designed to create and compare linear mixed effects models
# Requires objects from Sayers_NeotropicalHgSummary.R (lines 0-1256)

library(tidyverse)

# creating a data frame for modeling purposes
HgSamples <- CollectiveData %>%
  # excluding duplicate samples derived from the same individual
  mutate(Tail_Hg_ppm = ifelse(!is.na(Blood_Hg_ppm) & !is.na(Body_Hg_ppm) & !is.na(Tail_Hg_ppm), NA, Tail_Hg_ppm)) %>%
  mutate(Tail_Hg_ppm = ifelse(!is.na(Blood_Hg_ppm) & !is.na(Tail_Hg_ppm), NA, Tail_Hg_ppm)) %>%
  mutate(Body_Hg_ppm = ifelse(!is.na(Blood_Hg_ppm) & !is.na(Body_Hg_ppm), NA, Body_Hg_ppm)) %>% 
  mutate(Body_Hg_ppm = ifelse(!is.na(Tail_Hg_ppm) & !is.na(Body_Hg_ppm), NA, Body_Hg_ppm)) %>% 
  # adding tissue type as a data field 
  pivot_longer(c(Blood_Hg_ppm, Body_Hg_ppm, Tail_Hg_ppm),
               names_to = "Tissue_Type", values_to = "Hg_Concentration") %>% 
  # only including full species names
  filter(!(str_detect(Species_Common_Name, " sp."))) %>%
  # removing NA values in key variables so the models can run
  filter(!is.na(Hg_Concentration), !is.na(Trophic_Niche), !is.na(HAB1),
         !is.na(Migratory_Status), !is.na(Mining_Present_Yes_No), 
         !is.na(Family)) %>%
  # Creating new column with natural-log transformed THg concentrations
  mutate(lHg_Concentration = log(Hg_Concentration)) %>% 
  # Creating new column with date to capture annual trends
  mutate(Date = make_date(Year, Month, Day),
         Julian_Date = yday(Date))


#----------------------- DATA VISUALIZATION ------------------------------------
# much of the strategy below is from Zurr et al. (2010)  https://doi.org/10.1111/j.2041-210X.2009.00001.x

# OUTLIERS & NORMALITY OF RESPONSE VARIABLE ----------
ggdensity(HgSamples$Hg_Concentration, xlab = "Hg Concentration (µg/g)") # some high outliers 
ggqqplot(HgSamples$Hg_Concentration, ylab = "Hg Concentration (µg/g)") # tails stray from far from normal
shapiro.test(HgSamples$Hg_Concentration) # W = 0.21811, p-value < 2.2e-16, not normal
# log-transformation may be necessary for linear models

# log-transformed data diagnostics
ggdensity(HgSamples$lHg_Concentration, xlab = "ln[Hg Concentration (µg/g)]")
ggqqplot(HgSamples$lHg_Concentration) # much better than before
shapiro.test(HgSamples$lHg_Concentration) # W = 0.99349, p-value = 4.98e-06, not normal

# Cleavland dotplot of raw data by Family
ggplot(HgSamples, aes(x = Hg_Concentration, y = Family, color = Tissue_Type)) +
  geom_point() +
  labs(x = "Hg Concentration (µg/g ww)", y = "Family")

# Cleavland dotplot of natural-log transformed data, no apparent outliers anymore
ggplot(HgSamples, aes(x = log(Hg_Concentration), y = Family, color = Tissue_Type)) +
  geom_point() +
  labs(x = "ln(Hg) Concentration (µg/g ww)", y = "Family")


#--------------------- ANALYSIS + LINEAR MODELS --------------------------------
library(ggpubr)
library(MuMIn)
library(lme4)
library(usdm)
library(lmerTest)

# choosing the ideal random effect structure
nullmodel1 <- lmer(log(Hg_Concentration) ~ (1 | SiteID) + (1 | Species_Common_Name) + (1 | Date), data = HgSamples, REML = F)
nullmodel2 <- lmer(log(Hg_Concentration) ~ (1 | SiteID) + (1 | Family/Species_Common_Name) + (1 | Date), data = HgSamples, REML = F)
nullmodel3 <- lmer(log(Hg_Concentration) ~ (1 | SiteID) + (1 | Family) + (1 | Date), data = HgSamples, REML = F)
nullmodel4 <- lmer(log(Hg_Concentration) ~ (1 | Family/SiteID) + (1 | Date), data = HgSamples, REML = F)
nullmodel5 <- lmer(log(Hg_Concentration) ~ (1 | Species_Common_Name/SiteID) + (1 | Date), data = HgSamples, REML = F)

anova(nullmodel1, nullmodel2, nullmodel3, nullmodel4, nullmodel5)
# nullmodel2 is a clear winner, so we will use this RE structure in the full model

fullmodel <- lmer(log(Hg_Concentration) ~ 
                    
                    # Hg toxicokinetics
                    Tissue_Type +
                    
                    # functional traits
                    Trophic_Niche + HAB1 + Migratory_Status +
                    
                    # landscape traits
                    Mining_Present_Yes_No +
                    
                    # crossed random effects
                    (1 | SiteID) + (1 | Family/Species_Common_Name) + (1 | Date),
                  
                  data = HgSamples, REML = F)

summary(fullmodel)
r.squaredGLMM(fullmodel)
anova(fullmodel)
rand(fullmodel)

# CHECKING MODEL ASSUMPTIONS -------------------------------------
# Checking for homogeneity of variance & normality of residuals
mean(residuals(fullmodel)) # very very close to 0

library(ggResidpanel)
resid_panel(fullmodel, plots = "all", type = NA, bins = 30,
            smoother = T, qqline = T, qqbands = T, scale = 1,
            theme = "bw", axis.text.size = 10, title.text.size = 12,
            title.opt = TRUE, nrow = NULL)
shapiro.test(residuals(fullmodel)) # not normal
# residual plots look okay
# normality plot has a few tail stragglers, but the rest looks good

# Checking for normality of random effects
ggqqplot(ranef(fullmodel)$SiteID[,1]) # few tail stragglers, but the rest looks okay
shapiro.test(ranef(fullmodel)$SiteID[,1]) # we are normal

# tails stray from normal
ggqqplot(ranef(fullmodel)$Family[,1])
shapiro.test(ranef(fullmodel)$Family[,1]) # we are normal

# tails stray from normal
ggqqplot(ranef(fullmodel)$Species_Common_Name[,1])
shapiro.test(ranef(fullmodel)$Species_Common_Name[,1]) # we are not normal

# tails stray from normal
ggqqplot(ranef(fullmodel)$Date[,1])
shapiro.test(ranef(fullmodel)$Date[,1]) # we are not normal

# Checking for autocorrelation/independence
library(lawstat)
acf(HgSamples$Hg_Concentration) # raw data is autocorrelated
acf(residuals(fullmodel)) # random effects variable corrects for this
runs.test(residuals(fullmodel)) # we do not have autocorrelated data


# CANDIDATE MODEL SET -----------------------------------------------
library(AICcmodavg)
library(lmerTest)

fullmodel <- lmer(log(Hg_Concentration) ~ 
                     
                     # Hg toxicokinetics
                     Tissue_Type +
                     
                     # functional traits
                     Trophic_Niche + HAB1 + Migratory_Status +
                     
                     # landscape traits
                     Mining_Present_Yes_No +
                     
                     # random effects
                     (1 | SiteID) + (1 | Family/Species_Common_Name) + (1 | Date),
                   
                   data = HgSamples, REML = F)

summary(fullmodel)
r.squaredGLMM(fullmodel)
anova(fullmodel)
rand(fullmodel)

options(na.action = "na.fail")
# computes marginal and conditional R^2
d.out <- dredge(fullmodel, extra = list("Rsq" = function(x){r.squaredGLMM(x)}))
View(d.out)
options(na.action = "na.omit")
write.csv(d.out, "model_output.csv")

#subset(d.out, delta < 2)
#subset(d.out, cumsum(d.out$weight) <= .95)
#
## Model averaging for entire model set
#modelavg <- model.avg(d.out)
#summary(modelavg)
#
#confint(modelavg) # unconditional 95% CI
#MuMIn::importance(modelavg)

# 1st place model by a long-shot
topmodel <- lmer(log(Hg_Concentration) ~ Trophic_Niche + Tissue_Type + Mining_Present_Yes_No +
                   (1 | SiteID) + (1 | Family/Species_Common_Name) + (1 | Date),
                 data = HgSamples, REML = F)

summary(topmodel)
# on average, how much more Hg do ASGM sites have?
exp(1.6046) # backtransformed estimate = 4.975869
r.squaredGLMM(topmodel)
anova(topmodel)
rand(topmodel)


# 2nd place model
model2 <- lmer(log(Hg_Concentration) ~ Trophic_Niche + Tissue_Type + Mining_Present_Yes_No +
                 Migratory_Status + (1 | SiteID) + (1 | Family/Species_Common_Name) + (1 | Date),
               data = HgSamples, REML = F)

summary(model2)
r.squaredGLMM(model2)
anova(model2)
rand(model2)

